{"version":3,"file":"static/js/6.b05150ed.chunk.js","mappings":"oLA0CA,EAtCgC,WAC9B,IAAMA,GAAWC,EAAAA,EAAAA,QAAyB,MAC1C,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACRP,EAASQ,SAAWR,EAASQ,QAAQC,UACpC,KAEHF,EAAAA,EAAAA,YAAU,WAERD,EADc,eACQI,KAAKP,MAC1B,CAACA,IASJ,OACE,iBAAKQ,UAAU,SAAf,WACE,kBAAOA,UAAU,gBAAjB,wBACA,kBACEA,UAAU,gBACVC,MAAOT,EACPU,SAZ2D,SAACC,GAChEV,EAAcU,EAAEC,OAAOH,QAYnBI,IAAKhB,EACLiB,YAAY,uBAEd,iBAAMN,UAAU,gBAAgBO,QAAS,kBAAMd,EAAc,KAA7D,gBACEC,IAAgB,iBAAMM,UAAU,kBAAhB","sources":["components/PictureSearch/PictureSearch.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react'\r\nimport './PictureSearch.scss'\r\n\r\n\r\nconst PictureSearch: React.FC = () => {\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [isInputValid, setIsInputValid] = useState(true)\r\n\r\n  useEffect(() => {\r\n    inputRef.current && inputRef.current.focus()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const regex = /^[a-zA-Z]*$/g\r\n    setIsInputValid(regex.test(inputValue))\r\n  }, [inputValue])\r\n\r\n\r\n  const handleCgange: React.ChangeEventHandler<HTMLInputElement> = (e): void => {\r\n    setInputValue(e.target.value)\r\n    // тип - навести на элементе на onChange (работает для форм)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='search'>\r\n      <label className='search__label'>Searching</label>\r\n      <input\r\n        className='search__input'\r\n        value={inputValue}\r\n        onChange={handleCgange}\r\n        ref={inputRef}\r\n        placeholder='start typing here'\r\n      />\r\n      <span className='search__close' onClick={() => setInputValue('')}>+</span>\r\n      {!isInputValid && <span className='search__warning'>field can only contain letters</span>}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PictureSearch\r\n"],"names":["inputRef","useRef","useState","inputValue","setInputValue","isInputValid","setIsInputValid","useEffect","current","focus","test","className","value","onChange","e","target","ref","placeholder","onClick"],"sourceRoot":""}