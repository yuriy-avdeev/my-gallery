{"version":3,"file":"static/js/384.6bee8b3e.chunk.js","mappings":"+PAeMA,EAA4B,CAChC,CAAEC,KAAM,OAAQC,KAAMC,EAAMC,OAAQ,QACpC,CAAEH,KAAM,OAAQC,KAAMG,EAAMD,OAAQ,QACpC,CAAEH,KAAM,QAASC,KAAMI,EAAOF,OAAQ,SACtC,CAAEH,KAAM,SAAUC,KAAMK,EAASH,OAAQ,WACzC,CAAEH,KAAM,YAAaC,KAAMM,EAAWJ,OAAQ,aAC9C,CAAEH,KAAM,SAAUC,KAAMO,EAAQL,OAAQ,WACxC,CAAEH,KAAM,MAAOC,KAAMQ,EAAKN,OAAQ,QAsBpC,EAhBoB,WAClB,IAAQA,GAAWO,EAAAA,EAAAA,MAAXP,OACR,GAAwBQ,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACRD,EAAQd,EAAUgB,MAAK,SAAAC,GAAC,OAAIA,EAAEb,SAAWA,QACxC,CAACA,KAIF,8BACGS,IAAQ,gBAAKK,UAAU,sBAAsBC,IAAKN,EAAKX,KAAMkB,IAAG,mBAAcP,EAAKZ","sources":["components/PictureItem/PictureItem.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport './PictureItem.scss'\r\n\r\nimport { PaintingData } from '../../types/variables'\r\n\r\n\r\nimport dali from '../../assets/images/mock/dali.jpg'\r\nimport endy from '../../assets/images/mock/endy.webp'\r\nimport monet from '../../assets/images/mock/monet.jpg'\r\nimport raffael from '../../assets/images/mock/raffael.jpg'\r\nimport rembrandt from '../../assets/images/mock/rembrandt.jpg'\r\nimport vanGog from '../../assets/images/mock/van-gog.jpg'\r\nimport sun from '../../assets/images/mock/sun.png'\r\n\r\nconst paintings: PaintingData[] = [ // потом добавить как для пропсов\r\n  { name: 'Dali', link: dali, cardId: 'dali' },\r\n  { name: 'Endy', link: endy, cardId: 'endy' },\r\n  { name: 'Monet', link: monet, cardId: 'monet' },\r\n  { name: 'Raffel', link: raffael, cardId: 'raffael' },\r\n  { name: 'Rembrandt', link: rembrandt, cardId: 'rembrandt' },\r\n  { name: 'VanGog', link: vanGog, cardId: 'van-gog' },\r\n  { name: 'Sun', link: sun, cardId: 'sun' }\r\n]\r\n\r\n// надуманный пример - наследование интерфейса от (!) типа без новых данных\r\ninterface IPaintingData extends PaintingData { }\r\n\r\nconst PictureItem = () => {\r\n  const { cardId } = useParams()\r\n  const [card, setCard] = useState<IPaintingData>()\r\n\r\n  useEffect(() => {\r\n    setCard(paintings.find(c => c.cardId === cardId))\r\n  }, [cardId])\r\n\r\n\r\n  return (\r\n    <>\r\n      {card && <img className='picture-item__image' src={card.link} alt={`painting ${card.name}`} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PictureItem\r\n"],"names":["paintings","name","link","dali","cardId","endy","monet","raffael","rembrandt","vanGog","sun","useParams","useState","card","setCard","useEffect","find","c","className","src","alt"],"sourceRoot":""}