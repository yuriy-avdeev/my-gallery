{"version":3,"file":"static/js/872.95c97db9.chunk.js","mappings":"mMAuBA,GAXkCA,EAAAA,EAAAA,OAAK,YAAiC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAClD,OACE,iBAAKC,UAAS,eAAUD,GAAgB,eAAxC,WACE,SAAC,KAAD,CAASE,GAAIH,EAASI,OAAtB,UACE,gBAAKF,UAAU,cAAcG,IAAKL,EAASM,KAAMC,IAAKP,EAASQ,UAEjE,eAAIN,UAAU,cAAd,SAA6BF,EAASQ,a,4DCHtCC,EAA4B,CAChC,CAAED,KAAM,OAAQF,KAAMI,EAAMN,OAAQ,QACpC,CAAEI,KAAM,QAASF,KAAMK,EAAOP,OAAQ,SACtC,CAAEI,KAAM,UAAWF,KAAMM,EAASR,OAAQ,WAC1C,CAAEI,KAAM,SAAUF,K,OAAcF,OAAQ,WACxC,CAAEI,KAAM,YAAaF,KAAMO,EAAWT,OAAQ,aAC9C,CAAEI,KAAM,MAAOF,K,OAAWF,OAAQ,OAClC,CAAEI,KAAM,OAAQF,KAAMQ,EAAMV,OAAQ,SAyCtC,EAtC0B,WACxB,IAAQA,GAAWW,EAAAA,EAAAA,MAAXX,OAGR,GAAwCY,EAAAA,EAAAA,WAAS,GAAjD,eAAOf,EAAP,KAAqBgB,EAArB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACRD,IAAkBb,KACjB,CAACA,KAIF,iBAAKF,UAAU,UAAf,WACE,iBAAKA,UAAS,+BAA0BD,GAAgB,8BAAxD,WACE,eAAIC,UAAU,iBAAd,yBACA,SAACiB,EAAA,QAAD,QAGF,iBAAKjB,UAAU,mBAAf,WAEE,gBAAKA,UAAS,8BAAyBD,GAAgB,6BAAvD,SAEIQ,EAAUW,KAAI,SAAAC,GAAC,OACb,SAAC,EAAD,CAAMrB,SAAUqB,EAAGpB,aAAcA,GAAmBoB,EAAEjB,aAK1DH,IACA,gBAAKC,UAAU,wBAAf,UACE,SAAC,KAAD,c,8FCfZ,EApCgC,WAC9B,IAAMoB,GAAWC,EAAAA,EAAAA,QAAyB,MAC1C,GAAoCP,EAAAA,EAAAA,UAAS,IAA7C,eAAOQ,EAAP,KAAmBC,EAAnB,KACA,GAAwCT,EAAAA,EAAAA,WAAS,GAAjD,eAAOU,EAAP,KAAqBC,EAArB,MAEAT,EAAAA,EAAAA,YAAU,WACRI,EAASM,SAAWN,EAASM,QAAQC,UACpC,KAEHX,EAAAA,EAAAA,YAAU,WAERS,EADc,eACQG,KAAKN,MAC1B,CAACA,IASJ,OACE,iBAAKtB,UAAU,SAAf,WACE,kBACEA,UAAU,gBACV6B,MAAOP,EACPQ,SAX2D,SAACC,GAChER,EAAcQ,EAAEC,OAAOH,QAWnBI,IAAKb,EACLc,YAAY,mCAEd,iBAAMlC,UAAU,gBAAgBmC,QAAS,kBAAMZ,EAAc,KAA7D,gBACEC,IAAgB,iBAAMxB,UAAU,kBAAhB,iD","sources":["components/Card/Card.tsx","components/Gallery/Gallery.tsx","components/PictureSearch/PictureSearch.tsx"],"sourcesContent":["import { memo } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport './Card.scss'\r\nimport { PaintingData } from '../../types/variables'\r\n\r\ntype CardProps = {\r\n  painting: PaintingData,\r\n  isOutletOpen: boolean\r\n}\r\n\r\n\r\nconst Card: React.FC<CardProps> = memo(({ painting, isOutletOpen }) => {\r\n  return (\r\n    <div className={`card ${isOutletOpen && 'card__shift'}`}>\r\n      <NavLink to={painting.cardId}>\r\n        <img className='card__image' src={painting.link} alt={painting.name} />\r\n      </NavLink>\r\n      <h4 className='card__title'>{painting.name}</h4>\r\n    </div >\r\n  )\r\n})\r\n\r\nexport default Card\r\n","import { memo, useEffect, useState } from 'react'\r\nimport Card from '../Card/Card'\r\nimport PictureSearch from '../PictureSearch/PictureSearch'\r\nimport './Gallery.scss'\r\nimport { Outlet, useParams, useLocation } from 'react-router-dom'\r\nimport { PaintingData } from '../../types/variables'\r\n\r\nimport dali from '../../assets/images/mock/dali.jpg'\r\nimport endy from '../../assets/images/mock/endy.webp'\r\nimport monet from '../../assets/images/mock/monet.jpg'\r\nimport raffael from '../../assets/images/mock/raffael.jpg'\r\nimport rembrandt from '../../assets/images/mock/rembrandt.jpg'\r\nimport vanGog from '../../assets/images/mock/van-gog.jpg'\r\nimport sun from '../../assets/images/mock/sun.png'\r\n\r\nconst paintings: PaintingData[] = [ // потом добавить как для пропсов\r\n  { name: 'Dali', link: dali, cardId: 'dali' },\r\n  { name: 'Monet', link: monet, cardId: 'monet' },\r\n  { name: 'Raffael', link: raffael, cardId: 'raffael' },\r\n  { name: 'VanGog', link: vanGog, cardId: 'van-gog' },\r\n  { name: 'Rembrandt', link: rembrandt, cardId: 'rembrandt' },\r\n  { name: 'Sun', link: sun, cardId: 'sun' },\r\n  { name: 'Endy', link: endy, cardId: 'endy' },\r\n]\r\n\r\nconst Gallery: React.FC = () => {\r\n  const { cardId } = useParams()\r\n  // let location = useLocation()\r\n\r\n  const [isOutletOpen, setIsOutletOpen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsOutletOpen(!!cardId)\r\n  }, [cardId])\r\n\r\n\r\n  return (\r\n    <div className='gallery'>\r\n      <div className={`gallery__content-box ${isOutletOpen && 'gallery__content-box_shift'}`}>\r\n        <h1 className='gallery__title'>My gallery</h1>\r\n        <PictureSearch />\r\n      </div>\r\n\r\n      <div className='gallery__content' >\r\n        {/* добавить плавность смещения */}\r\n        <div className={`gallery__images-box ${isOutletOpen && 'gallery__images-box_shift'}`}>\r\n          {\r\n            paintings.map(c =>\r\n              <Card painting={c} isOutletOpen={isOutletOpen} key={c.cardId} />)\r\n          }\r\n        </div>\r\n        {/* добавить плавность появления */}\r\n        {\r\n          isOutletOpen &&\r\n          <div className=\"gallery__children-box\">\r\n            <Outlet />\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Gallery\r\n","import { useState, useRef, useEffect } from 'react'\r\nimport './PictureSearch.scss'\r\n\r\n\r\nconst PictureSearch: React.FC = () => {\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [isInputValid, setIsInputValid] = useState(true)\r\n\r\n  useEffect(() => {\r\n    inputRef.current && inputRef.current.focus()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const regex = /^[a-zA-Z]*$/g\r\n    setIsInputValid(regex.test(inputValue))\r\n  }, [inputValue])\r\n\r\n\r\n  const handleCgange: React.ChangeEventHandler<HTMLInputElement> = (e): void => {\r\n    setInputValue(e.target.value)\r\n    // тип - навести на элементе на onChange (работает для форм)\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='search'>\r\n      <input\r\n        className='search__input'\r\n        value={inputValue}\r\n        onChange={handleCgange}\r\n        ref={inputRef}\r\n        placeholder='Searching - start typing here'\r\n      />\r\n      <span className='search__close' onClick={() => setInputValue('')}>+</span>\r\n      {!isInputValid && <span className='search__warning'>field can only contain letters</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PictureSearch\r\n"],"names":["memo","painting","isOutletOpen","className","to","cardId","src","link","alt","name","paintings","dali","monet","raffael","rembrandt","endy","useParams","useState","setIsOutletOpen","useEffect","PictureSearch","map","c","inputRef","useRef","inputValue","setInputValue","isInputValid","setIsInputValid","current","focus","test","value","onChange","e","target","ref","placeholder","onClick"],"sourceRoot":""}